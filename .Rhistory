options(mc.cores = parallel::detectCores())
theme_set(theme_minimal())
# Need to rescale the concentration from ng/ML to mg/L since dose is in mg.
apixaban.data = read_csv('2018-09 Apixiban Bayesian Models/Data/ApixibanExperimentData.csv') %>%
arrange(Subject,Time) %>%
filter(Time>0) %>%
mutate(Concentration_orig = Concentration,
Concentration = 10e-3*Concentration_orig) #resalced from ng/ml to mg/L
apixaban.plot = apixaban.data %>%
ggplot(aes(Time,Concentration))+
geom_point(aes(color = interaction(Sex,Group)))+
facet_wrap(~Subject)+
scale_color_brewer(palette = 'Set1')+
theme(legend.position = 'bottom')
apixaban.plot
t0 = 0
C0 = array(c(0), dim = 1)
D = 2.5
times = sort(unique(apixaban.data$Time))
subject_names = apixaban.data$Subject %>% unique
subjects = apixaban.data$Subject %>%
factor %>%
as.numeric %>%
unique
C_hat = apixaban.data %>%
select(Time,Subject,Concentration) %>%
spread(Time,Concentration) %>%
arrange(Subject) %>%
select(-Subject) %>%
as.matrix
D = 2.5
N_t = length(times)
N_patients = length(subjects)
N_ut = 50;
utimes = seq(min(times), max(times), length.out = N_ut)
X = apixaban.data %>%
mutate(Intercept = 1) %>%
distinct(Subject,Intercept,Sex,Group) %>%
mutate(
Sex = Sex %>% factor %>% as.numeric - 1,
Group = Group %>% factor %>% as.numeric - 1,
ITXN = Sex*Group
) %>%
select(-Subject) %>%
as.matrix
X = X[,c('Intercept','Sex','Group','ITXN')]
rstan::stan_rdump(c("t0", "C0", "D", "times", "N_t", "N_patients", "C_hat", 'utimes','N_ut','X'),
file="2018-09 Apixiban Bayesian Models/Data/model_7_data.data.R")
input_data <- read_rdump("2018-09 Apixiban Bayesian Models/Data/model_7_data.data.R")
L = stan_fitter('model_7', input_data = input_data)
params = L$params
fit = L$fit
x = params$C_pred
conc = apply(x,c(2,3),median) %>%
as.table %>%
`dimnames<-`(list(Subject = subject_names[subjects],Time = utimes)) %>%
as.data.frame.table(stringsAsFactors = F, responseName = 'Concentration') %>%
mutate(Time = as.numeric(Time))
lim = apply(x,c(2,3),function(x) quantile(x,c(0.025, 0.975))) %>%
as.table %>%
`dimnames<-`( list(Lims = c('ymin','ymax'), Subject = subject_names ,Time = utimes) ) %>%
as.data.frame.table(stringsAsFactors = F, responseName = 'Concentration') %>%
mutate(Time = as.numeric(Time)) %>%
spread(Lims,Concentration)
mcmc = conc %>%
left_join(lim)
apixaban.plot+
geom_line(data = mcmc, aes(group = Subject))+
geom_ribbon(data = mcmc, aes(ymin = ymin, ymax = ymax,group = Subject), alpha = 0.5)
ggsave(filename = 'model_7.pdf', path = '2018-09 Apixiban Bayesian Models/Figures/')
mcmc_areas(as.matrix(fit),
regex_pars = c('BETA'),
prob = 0.95, # 80% intervals
prob_outer = 0.99, # 99%
)
N = 50
y = params$C[1:N,,]
y %>%
as.table() %>%
`dimnames<-`( list(Round =  1:N, Subject = subject_names, Time = times) ) %>%
as.data.frame.table(responseName = 'Concentration',stringsAsFactors = F) %>%
mutate(Time = as.numeric(Time), Subject = as.numeric(Subject), Round = as.numeric(Round)) %>%
bind_rows(apixaban.data %>% select(Time,Concentration,Subject)) %>%
mutate(Round = replace_na(Round,N+1),
Kind= if_else(Round>N,'Data','Simulation'),
alpha = if_else(Kind=='Data',1,0.5)) %>%
ggplot(aes(Time,Concentration,group = factor(Round), color = Kind,alpha = alpha))+
geom_line()+
facet_wrap(~Subject, scale = 'free_y')+
scale_color_brewer(palette = 'Set1')+
scale_alpha_identity()
source('~/Documents/PhD Code/2018-09 Apixiban Bayesian Models/Run Models/Model_7.R', echo=TRUE)
x
dim(x)
x = params$C
conc = apply(x,c(2,3),median) %>%
as.table %>%
`dimnames<-`(list(Subject = subject_names[subjects],Time = utimes)) %>%
as.data.frame.table(stringsAsFactors = F, responseName = 'Concentration') %>%
mutate(Time = as.numeric(Time))
conc = apply(x,c(2,3),median) %>%
as.table %>%
`dimnames<-`(list(Subject = subject_names,Time = utimes)) %>%
as.data.frame.table(stringsAsFactors = F, responseName = 'Concentration') %>%
mutate(Time = as.numeric(Time))
apply(x,c(2,3), median)
apply(x,c(2,3), median) %>% dim
subject_bames
subject_names
subject_names %>% length
utimes
conc = apply(x,c(2,3),median) %>%
as.table %>%
`dimnames<-`(list(Subject = subject_names,Time = times)) %>%
as.data.frame.table(stringsAsFactors = F, responseName = 'Concentration') %>%
mutate(Time = as.numeric(Time))
lim = apply(x,c(2,3),function(x) quantile(x,c(0.025, 0.975))) %>%
as.table %>%
`dimnames<-`( list(Lims = c('ymin','ymax'), Subject = subject_names ,Time = utimes) ) %>%
as.data.frame.table(stringsAsFactors = F, responseName = 'Concentration') %>%
mutate(Time = as.numeric(Time)) %>%
spread(Lims,Concentration)
lim = apply(x,c(2,3),function(x) quantile(x,c(0.025, 0.975))) %>%
as.table %>%
`dimnames<-`( list(Lims = c('ymin','ymax'), Subject = subject_names ,Time = times) ) %>%
as.data.frame.table(stringsAsFactors = F, responseName = 'Concentration') %>%
mutate(Time = as.numeric(Time)) %>%
spread(Lims,Concentration)
mcmc = conc %>%
left_join(lim)
apixaban.plot+
geom_line(data = mcmc, aes(group = Subject))+
geom_ribbon(data = mcmc, aes(ymin = ymin, ymax = ymax,group = Subject), alpha = 0.5)
ggsave(filename = 'model_7.pdf', path = '2018-09 Apixiban Bayesian Models/Figures/')
apixaban.plot+
geom_line(data = mcmc, aes(group = Subject))+
geom_ribbon(data = mcmc, aes(ymin = ymin, ymax = ymax,group = Subject), alpha = 0.5)
ggsave(filename = 'model_7.pdf', path = '2018-09 Apixiban Bayesian Models/Figures/')
mcmc_areas(as.matrix(fit),
regex_pars = c('BETA'),
prob = 0.95, # 80% intervals
prob_outer = 0.99, # 99%
)
mcmc_pairs(as.matrix(fit),
regex_pars = c('BETA'))
mcmc_pairs(as.matrix(fit),
regex_pars = c('BETA'))
params = readRDS('2018-09 Apixiban Bayesian Models/Data/model_7_fit.rds')
params
params = rstan::extract(fit)
fit = readRDS('2018-09 Apixiban Bayesian Models/Data/model_7_fit.rds')
params = rstan::extract(fit)
params$BETA_V
x = params$C
conc = apply(x,c(2,3),median) %>%
as.table %>%
`dimnames<-`(list(Subject = subject_names,Time = times)) %>%
as.data.frame.table(stringsAsFactors = F, responseName = 'Concentration') %>%
mutate(Time = as.numeric(Time))
lim = apply(x,c(2,3),function(x) quantile(x,c(0.025, 0.975))) %>%
as.table %>%
`dimnames<-`( list(Lims = c('ymin','ymax'), Subject = subject_names ,Time = times) ) %>%
as.data.frame.table(stringsAsFactors = F, responseName = 'Concentration') %>%
mutate(Time = as.numeric(Time)) %>%
spread(Lims,Concentration)
mcmc = conc %>%
left_join(lim)
source('~/Documents/PhD Code/2018-09 Apixiban Bayesian Models/Run Models/Model_7.R', echo=TRUE)
N = 5
y = params$C_ppc[sample(1:4000, replace = F, size = N),,]
y %>%
as.table() %>%
`dimnames<-`( list(Round =  1:N, Subject = subject_names, Time = times) ) %>%
as.data.frame.table(responseName = 'Concentration',stringsAsFactors = F) %>%
mutate(Time = as.numeric(Time), Subject = as.numeric(Subject), Round = as.numeric(Round)) %>%
bind_rows(apixaban.data %>% select(Time,Concentration,Subject)) %>%
mutate(Round = replace_na(Round,N+1),
Kind= if_else(Round>N,'Data','Simulation'),
alpha = if_else(Kind=='Data',1,0.5)) %>%
ggplot(aes(Time,Concentration,group = factor(Round), color = Kind,alpha = alpha))+
geom_line()+
facet_wrap(~Subject, scale = 'free_y')+
scale_color_brewer(palette = 'Set1')+
scale_alpha_identity()
x = params$C
conc = apply(x, c(2, 3), median) %>%
as.table %>%
`dimnames<-`(list(Subject = subject_names, Time = times)) %>%
as.data.frame.table(stringsAsFactors = F, responseName = 'Concentration') %>%
mutate(Time = as.numeric(Time))
lim = apply(x, c(2, 3), function(x)
quantile(x, c(0.025, 0.975))) %>%
as.table %>%
`dimnames<-`(list(
Lims = c('ymin', 'ymax'),
Subject = subject_names ,
Time = times
)) %>%
as.data.frame.table(stringsAsFactors = F, responseName = 'Concentration') %>%
mutate(Time = as.numeric(Time)) %>%
spread(Lims, Concentration)
mcmc = conc %>%
left_join(lim)
apixaban.plot +
geom_line(data = mcmc, aes(group = Subject)) +
geom_ribbon(data = mcmc,
aes(ymin = ymin, ymax = ymax, group = Subject),
alpha = 0.5)
ggsave(filename = 'model_7.pdf', path = '2018-09 Apixiban Bayesian Models/Figures/')
# mcmc_areas(
#   as.matrix(fit),
#   regex_pars = c('BETA'),
#   prob = 0.95,
#   # 80% intervals
#   prob_outer = 0.99,
#   # 99%
)
N = 5
y = params$C_ppc[sample(1:4000, replace = F, size = N), , ]
y %>%
as.table() %>%
`dimnames<-`(list(
Round =  1:N,
Subject = subject_names,
Time = times
)) %>%
as.data.frame.table(responseName = 'Concentration', stringsAsFactors = F) %>%
mutate(
Time = as.numeric(Time),
Subject = as.numeric(Subject),
Round = as.numeric(Round)
) %>%
bind_rows(apixaban.data %>% select(Time, Concentration, Subject)) %>%
mutate(
Round = replace_na(Round, N + 1),
Kind = if_else(Round > N, 'Data', 'Simulation'),
alpha = if_else(Kind == 'Data', 1, 0.5)
) %>%
ggplot(aes(
Time,
Concentration,
group = factor(Round),
color = Kind,
alpha = alpha
)) +
geom_line() +
facet_wrap( ~ Subject, scale = 'free_y') +
scale_color_brewer(palette = 'Set1') +
scale_alpha_identity()
y = params$C[sample(1:4000, replace = F, size = N), , ]
y %>%
as.table() %>%
`dimnames<-`(list(
Round =  1:N,
Subject = subject_names,
Time = times
)) %>%
as.data.frame.table(responseName = 'Concentration', stringsAsFactors = F) %>%
mutate(
Time = as.numeric(Time),
Subject = as.numeric(Subject),
Round = as.numeric(Round)
) %>%
bind_rows(apixaban.data %>% select(Time, Concentration, Subject)) %>%
mutate(
Round = replace_na(Round, N + 1),
Kind = if_else(Round > N, 'Data', 'Simulation'),
alpha = if_else(Kind == 'Data', 1, 0.5)
) %>%
ggplot(aes(
Time,
Concentration,
group = factor(Round),
color = Kind,
alpha = alpha
)) +
geom_line() +
facet_wrap( ~ Subject, scale = 'free_y') +
scale_color_brewer(palette = 'Set1') +
scale_alpha_identity()
y %>%
as.table() %>%
`dimnames<-`(list(
Round =  1:N,
Subject = subject_names,
Time = times
)) %>%
as.data.frame.table(responseName = 'Concentration', stringsAsFactors = F) %>%
mutate(
Time = as.numeric(Time),
Subject = as.numeric(Subject),
Round = as.numeric(Round)
) %>%
bind_rows(apixaban.data %>% select(Time, Concentration, Subject)) %>%
mutate(
Round = replace_na(Round, N + 1),
Kind = if_else(Round > N, 'Data', 'Simulation'),
alpha = if_else(Kind == 'Data', 1, 0.5)
) %>%
ggplot(aes(
Time,
Concentration,
group = factor(Round),
color = Kind,
alpha = alpha
)) +
geom_line() +
facet_wrap( ~ Subject, scale = 'free_y') +
scale_color_brewer(palette = 'Set1') +
scale_alpha_identity()+
theme(
legend.position = 'bottom'
)
y %>%
as.table() %>%
`dimnames<-`(list(
Round =  1:N,
Subject = subject_names,
Time = times
)) %>%
as.data.frame.table(responseName = 'Concentration', stringsAsFactors = F) %>%
mutate(
Time = as.numeric(Time),
Subject = as.numeric(Subject),
Round = as.numeric(Round)
) %>%
bind_rows(apixaban.data %>% select(Time, Concentration, Subject)) %>%
mutate(
Round = replace_na(Round, N + 1),
Kind = if_else(Round > N, 'Data', 'Simulation'),
alpha = if_else(Kind == 'Data', 1, 0.5)
) %>%
ggplot(aes(
Time,
Concentration,
group = factor(Round),
color = Kind,
alpha = alpha
)) +
geom_line() +
facet_wrap( ~ Subject) +
scale_color_brewer(palette = 'Set1') +
scale_alpha_identity()+
theme(
legend.position = 'bottom'
)
, scale = 'free_y
y %>%
as.table() %>%
`dimnames<-`(list(
Round =  1:N,
Subject = subject_names,
Time = times
)) %>%
as.data.frame.table(responseName = 'Concentration', stringsAsFactors = F) %>%
mutate(
Time = as.numeric(Time),
Subject = as.numeric(Subject),
Round = as.numeric(Round)
) %>%
bind_rows(apixaban.data %>% select(Time, Concentration, Subject)) %>%
mutate(
Round = replace_na(Round, N + 1),
Kind = if_else(Round > N, 'Data', 'Simulation'),
alpha = if_else(Kind == 'Data', 1, 0.5)
) %>%
ggplot(aes(
Time,
Concentration,
group = factor(Round),
color = Kind,
alpha = alpha
)) +
geom_line() +
facet_wrap( ~ Subject, scale = 'free_y') +
scale_color_brewer(palette = 'Set1') +
scale_alpha_identity()+
theme(
legend.position = 'bottom'
)
mcmc_areas(as.matrix(fit), pars = 'sigma')
simulations = y %>%
as.table() %>%
`dimnames<-`(list(
Round =  1:N,
Subject = subject_names,
Time = times
)) %>%
as.data.frame.table(responseName = 'Concentration', stringsAsFactors = F) %>%
mutate(
Time = as.numeric(Time),
Subject = as.numeric(Subject),
Round = as.numeric(Round)
) %>%
bind_rows(apixaban.data %>% select(Time, Concentration, Subject)) %>%
mutate(
Round = replace_na(Round, N + 1),
Kind = if_else(Round > N, 'Data', 'Simulation'),
alpha = if_else(Kind == 'Data', 1, 0.5)
)
simulations %>%
ggplot(aes(
Time,
Concentration,
group = factor(Round),
color = Kind,
alpha = alpha
)) +
geom_line() +
facet_wrap(~ Subject, scale = 'free_y') +
scale_color_brewer(palette = 'Set1') +
scale_alpha_identity() +
theme(legend.position = 'bottom')
apixaban.data %>%
ggplot(aes(Time,Concencentration, group = Subject))+geom_line()
apixaban.data %>% ggplot(aes(Time,Concentration,group = Subject))+geom_line()
source('~/Documents/PhD Code/2018-09 Apixiban Bayesian Models/Run Models/Model_7.R', echo=TRUE)
apixaban.plot +
geom_line(data = mcmc, aes(group = Subject)) +
geom_ribbon(data = mcmc,
aes(ymin = ymin, ymax = ymax, group = Subject),
alpha = 0.5)
apixaban.plot +
geom_line(data = mcmc, aes(group = Subject)) +
geom_ribbon(data = mcmc,
aes(ymin = ymin, ymax = ymax, group = Subject),
alpha = 0.5)
N = 5
y = params$C_ppc[sample(1:4000, replace = F, size = N), , ]
simulations = y %>%
as.table() %>%
`dimnames<-`(list(
Round =  1:N,
Subject = subject_names,
Time = times
)) %>%
as.data.frame.table(responseName = 'Concentration', stringsAsFactors = F) %>%
mutate(
Time = as.numeric(Time),
Subject = as.numeric(Subject),
Round = as.numeric(Round)
) %>%
bind_rows(apixaban.data %>% select(Time, Concentration, Subject)) %>%
mutate(
Round = replace_na(Round, N + 1),
Kind = if_else(Round > N, 'Data', 'Simulation'),
alpha = if_else(Kind == 'Data', 1, 0.5)
)
simulations %>%
ggplot(aes(
Time,
Concentration,
group = factor(Round),
color = Kind,
alpha = alpha
)) +
geom_line() +
facet_wrap(~ Subject, scale = 'free_y') +
scale_color_brewer(palette = 'Set1') +
scale_alpha_identity() +
theme(legend.position = 'bottom')
y = params$C[sample(1:4000, replace = F, size = N), , ]
simulations = y %>%
as.table() %>%
`dimnames<-`(list(
Round =  1:N,
Subject = subject_names,
Time = times
)) %>%
as.data.frame.table(responseName = 'Concentration', stringsAsFactors = F) %>%
mutate(
Time = as.numeric(Time),
Subject = as.numeric(Subject),
Round = as.numeric(Round)
) %>%
bind_rows(apixaban.data %>% select(Time, Concentration, Subject)) %>%
mutate(
Round = replace_na(Round, N + 1),
Kind = if_else(Round > N, 'Data', 'Simulation'),
alpha = if_else(Kind == 'Data', 1, 0.5)
)
simulations %>%
ggplot(aes(
Time,
Concentration,
group = factor(Round),
color = Kind,
alpha = alpha
)) +
geom_line() +
facet_wrap(~ Subject, scale = 'free_y') +
scale_color_brewer(palette = 'Set1') +
scale_alpha_identity() +
theme(legend.position = 'bottom')
C_hat
C_hat - apply(x, c(2, 3), median)
(C_hat - apply(x, c(2, 3), median)) %>%
as.numeric
(C_hat - apply(x, c(2, 3), median)) %>%
as.numeric %>% hist
log((C_hat - apply(x, c(2, 3), median))) %>%
as.numeric %>% hist
(C_hat - apply(x, c(2, 3), median)) %>%
abs %>%
log %>%
as.numeric %>% hist
res = C_hat - apply(x, c(2, 3), median)
install.packages('qualityTools')
qualityTools::qqPlot(res,'log-normal')
res = C_hat - apply(x, c(2, 3), median)
res = C_hat - apply(x, c(2, 3), median)
qualityTools::qqPlot(res,'log-normal')
